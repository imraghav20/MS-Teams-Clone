{"version":3,"sources":["assets/ding.mp3","SocketContext.js","components/CallForm.jsx","components/CallSettings.jsx","components/Notifications.jsx","components/Chat.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","stream","setStream","videoStream","setVideoStream","me","setMe","call","setCall","callStarted","setCallStarted","callJoined","setCallJoined","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","chatVisibility","setChatVisibility","myVideo","useRef","userVideo","connectionRef","messageRef","audio","Audio","sound","useEffect","navigator","mediaDevices","getUserMedia","video","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivedCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","str","TextDecoder","decode","push","message","position","play","hostName","leaveCall","destroy","window","location","reload","answerCall","to","useStyles","makeStyles","theme","root","display","flexDirection","gridContainer","width","breakpoints","down","container","margin","padding","marginTop","paper","border","typography","color","CallForm","useContext","idToCall","setIdToCall","classes","Paper","elevation","className","Typography","variant","align","autoComplete","Grid","direction","justify","alignItems","item","xs","TextField","label","required","fullWidth","onChange","e","target","Button","type","onClick","preventDefault","startIcon","Phone","fontSize","wrapper","appBar","top","background","flexGrow","menuButton","marginRight","spacing","title","up","CallSettings","videoOn","setVideoOn","audioOn","setAudioOn","shareScreen","setShareScreen","shareStream","setShareStream","stopSharingScreen","replaceTrack","getTracks","stop","AppBar","Toolbar","Tooltip","IconButton","getVideoTracks","forEach","track","enabled","VideocamOff","style","fill","Videocam","getAudioTracks","MicOff","Mic","getDisplayMedia","cursor","onended","ScreenShare","StopScreenShare","text","Assignment","PanTool","People","PhoneDisabled","notification","zIndex","left","transform","justifyContent","Notifications","height","right","messageField","chatContainer","overflowY","borderRadius","float","clear","backgroundColor","middle","marginLeft","textAlign","Chat","setMessage","map","msg","join","action","send","Send","App","fontFamily","md","gutterBottom","playsInline","muted","ref","autoPlay","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6eb49b8a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ding.70168eef.mp3\";","import React, { createContext, useState, useRef, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nimport sound from './assets/ding.mp3';\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst socket = io('https://video-chat-app-imraghav20.herokuapp.com/');\r\n// const socket = io('http://localhost:5000/');\r\n\r\nconst ContextProvider = ({ children }) => {\r\n    const [stream, setStream] = useState(null);\r\n    const [videoStream, setVideoStream] = useState(null);\r\n    const [me, setMe] = useState('');\r\n    const [call, setCall] = useState({});\r\n    const [callStarted, setCallStarted] = useState(false);\r\n    const [callJoined, setCallJoined] = useState(false);\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [chatVisibility, setChatVisibility] = useState(false);\r\n\r\n    const myVideo = useRef();\r\n    const userVideo = useRef();\r\n    const connectionRef = useRef();\r\n    const messageRef = useRef([]);\r\n    const audio = useRef(new Audio(sound));\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n            .then((currentStream) => {\r\n                setStream(currentStream);\r\n\r\n                myVideo.current.srcObject = currentStream;\r\n                setVideoStream(currentStream);\r\n            });\r\n\r\n        socket.on('me', (id) => {\r\n            setMe(id);\r\n        });\r\n\r\n        socket.on('callUser', ({ from, name: callerName, signal }) => {\r\n            setCall({ isReceivedCall: true, from, name: callerName, signal });\r\n        })\r\n    }, []);\r\n\r\n    const answerCall = () => {\r\n        setCallAccepted(true);\r\n\r\n        const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('answerCall', { signal: data, to: call.from, from: name });\r\n            messageRef.current.push(\r\n                { message: call.name + \" joined the chat.\", position: \"middle\" }\r\n            );\r\n            audio.current.play();\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        peer.on('data', (data) => {\r\n            let str = new TextDecoder(\"utf-8\").decode(data);\r\n            messageRef.current.push(\r\n                { message: str, position: \"left\" }\r\n            );\r\n            setChatVisibility(false);\r\n            setChatVisibility(true);\r\n            audio.current.play();\r\n        });\r\n\r\n        peer.signal(call.signal);\r\n        connectionRef.current = peer;\r\n    };\r\n\r\n    const callUser = (id) => {\r\n        const peer = new Peer({ initiator: true, trickle: false, stream });\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        peer.on('data', (data) => {\r\n            let str = new TextDecoder(\"utf-8\").decode(data);\r\n            messageRef.current.push(\r\n                { message: str, position: \"left\" }\r\n            );\r\n            setChatVisibility(false);\r\n            setChatVisibility(true);\r\n            audio.current.play();\r\n        });\r\n\r\n        socket.on('callAccepted', (data) => {\r\n            setCallAccepted(true);\r\n            const signal = data.signal;\r\n            const hostName = data.name;\r\n            const from = data.from;\r\n            setCall({ isReceivedCall: false, from, name: hostName, signal });\r\n            peer.signal(data.signal);\r\n        });\r\n\r\n        connectionRef.current = peer;\r\n    };\r\n\r\n    const leaveCall = () => {\r\n        setCallEnded(true);\r\n\r\n        connectionRef.current.destroy();\r\n\r\n        window.location.reload();\r\n    };\r\n\r\n    return (\r\n        <SocketContext.Provider value={{\r\n            call,\r\n            callAccepted,\r\n            callStarted,\r\n            setCallStarted,\r\n            callJoined,\r\n            setCallJoined,\r\n            myVideo,\r\n            userVideo,\r\n            connectionRef,\r\n            messageRef,\r\n            stream,\r\n            videoStream,\r\n            chatVisibility,\r\n            setChatVisibility,\r\n            name,\r\n            setName,\r\n            callEnded,\r\n            me,\r\n            callUser,\r\n            leaveCall,\r\n            answerCall\r\n        }}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    );\r\n};\r\n\r\nexport { ContextProvider, SocketContext };","import React, { useContext, useState } from 'react';\r\nimport { Button, TextField, Typography, Grid, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Phone } from '@material-ui/icons';\r\n\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    gridContainer: {\r\n        width: '100%',\r\n        [theme.breakpoints.down('xs')]: {\r\n            flexDirection: 'column',\r\n        },\r\n    },\r\n    container: {\r\n        width: '600px',\r\n        margin: '35px 0',\r\n        padding: 0,\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '80%',\r\n        },\r\n    },\r\n    margin: {\r\n        marginTop: 10,\r\n    },\r\n    padding: {\r\n        padding: 20,\r\n    },\r\n    paper: {\r\n        margin: '10px 20px',\r\n        padding: '10px 20px',\r\n        border: '2px solid black',\r\n    },\r\n    typography: {\r\n        color: '#ffffff'\r\n    }\r\n}));\r\n\r\nconst CallForm = () => {\r\n    const { setCallStarted, setCallJoined, setName, callUser } = useContext(SocketContext);\r\n\r\n    const [idToCall, setIdToCall] = useState('');\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Paper elevation={10} className={classes.paper}>\r\n                <Typography variant='h5' align='center'>\r\n                    Start a Call\r\n                </Typography>\r\n                <form className={classes.root} autoComplete=\"off\">\r\n                    <Grid container direction='row' align='center' justify='center' alignItems='center'>\r\n                        <Grid item xs={8}>\r\n                            <TextField label='Name' required fullWidth onChange={(e) => setName(e.target.value)} />\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <Button type='submit' variant=\"contained\" onClick={(e) => { e.preventDefault(); setCallStarted(true); }} color=\"primary\" startIcon={<Phone fontSize=\"large\" />} fullWidth className={classes.margin}>\r\n                                Start Call\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n\r\n            <Typography variant='h6' align='center' className={classes.typography}>OR</Typography>\r\n\r\n            <Paper elevation={10} className={classes.paper}>\r\n                <Typography variant='h5' align='center'>\r\n                    Join a Call\r\n                </Typography>\r\n                <form className={classes.root} autoComplete=\"off\">\r\n                    <TextField label='Name' required fullWidth onChange={(e) => setName(e.target.value)} />\r\n                    <Grid container direction='row' align='center' justify='center' alignItems='center'>\r\n                        <Grid item xs={8}>\r\n                            <TextField label='Call ID' required fullWidth onChange={(e) => setIdToCall(e.target.value)} />\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <Button type='submit' variant=\"contained\" color=\"primary\" onClick={(e) => { e.preventDefault(); setCallStarted(true); setCallJoined(true); callUser(idToCall); }} startIcon={<Phone fontSize=\"large\" />} fullWidth className={classes.margin}>\r\n                                Join Call\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CallForm;\r\n","import React, { useContext, useState } from 'react';\r\nimport { AppBar, Toolbar, IconButton, Tooltip } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { VideocamOff, Videocam, Mic, MicOff, ScreenShare, StopScreenShare, PanTool, Chat, People, PhoneDisabled, Assignment } from '@material-ui/icons';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n        margin: 'auto',\r\n        width: 'fit-content'\r\n    },\r\n    appBar: {\r\n        top: 'auto',\r\n        background: '#0a0a0a',\r\n        width: 'fit-content',\r\n        alignItems: 'center',\r\n        position: 'inherit',\r\n        border: '1px solid white',\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        display: 'none',\r\n        [\r\n            theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n}));\r\n\r\nconst CallSettings = () => {\r\n    const classes = useStyles();\r\n    const { callStarted, me, stream, leaveCall, myVideo, videoStream, connectionRef, chatVisibility, setChatVisibility } = useContext(SocketContext);\r\n    const [videoOn, setVideoOn] = useState(true);\r\n    const [audioOn, setAudioOn] = useState(true);\r\n    const [shareScreen, setShareScreen] = useState(false);\r\n    const [shareStream, setShareStream] = useState(null);\r\n\r\n    const offCamera = () => {\r\n        var vidTrack = stream.getVideoTracks();\r\n        vidTrack.forEach(track => track.enabled = false);\r\n    }\r\n\r\n    const onCamera = () => {\r\n        var vidTrack = stream.getVideoTracks();\r\n        vidTrack.forEach(track => track.enabled = true);\r\n    }\r\n\r\n    const offMic = () => {\r\n        var audTrack = stream.getAudioTracks();\r\n        audTrack.forEach(track => track.enabled = false);\r\n    }\r\n\r\n    const onMic = () => {\r\n        var audTrack = stream.getAudioTracks();\r\n        audTrack.forEach(track => track.enabled = true);\r\n    }\r\n\r\n    const shareUserScreen = () => {\r\n        navigator.mediaDevices.getDisplayMedia({ cursor: true })\r\n            .then((currentStream) => {\r\n                setShareStream(currentStream);\r\n\r\n                connectionRef.current.replaceTrack(stream.getTracks()[1], currentStream.getTracks()[0], stream);\r\n\r\n                myVideo.current.srcObject = currentStream;\r\n                setShareScreen(true);\r\n\r\n                currentStream.getTracks()[0].onended = () => {\r\n                    stopSharingScreen();\r\n                }\r\n            });\r\n    }\r\n\r\n    const stopSharingScreen = () => {\r\n        connectionRef.current.replaceTrack(stream.getTracks()[1], videoStream.getTracks()[1], stream);\r\n        myVideo.current.srcObject = videoStream;\r\n\r\n        if (shareStream) {\r\n            shareStream.getTracks()[0].stop();\r\n        }\r\n\r\n        setShareScreen(false);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <AppBar className={classes.appBar} position='fixed'>\r\n                <Toolbar>\r\n                    {\r\n                        videoOn && (\r\n                            <Tooltip title='Turn Camera Off'>\r\n                                <IconButton onClick={() => { setVideoOn(false); offCamera(); }}>\r\n                                    <VideocamOff fontSize=\"large\" style={{ fill: \"white\" }} />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        )\r\n                    }\r\n                    {\r\n                        !videoOn && (\r\n                            <Tooltip title='Turn Camera On'>\r\n                                <IconButton onClick={() => { setVideoOn(true); onCamera(); }}>\r\n                                    <Videocam fontSize=\"large\" style={{ fill: \"white\" }} />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        )\r\n                    }\r\n                    {\r\n                        audioOn && (\r\n                            <Tooltip title='Turn Mic Off'>\r\n                                <IconButton onClick={() => { setAudioOn(false); offMic(); }}>\r\n                                    <MicOff fontSize=\"large\" style={{ fill: \"white\" }} />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        )\r\n                    }\r\n                    {\r\n                        !audioOn && (\r\n                            <Tooltip title='Turn Mic On'>\r\n                                <IconButton onClick={() => { setAudioOn(true); onMic(); }}>\r\n                                    <Mic fontSize=\"large\" style={{ fill: \"white\" }} />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        )\r\n                    }\r\n                    {\r\n                        callStarted && (\r\n                            <div>\r\n                                {\r\n                                    !shareScreen && (\r\n                                        <Tooltip title='Share Your Screen'>\r\n                                            <IconButton onClick={() => { shareUserScreen(); }}>\r\n                                                <ScreenShare fontSize=\"large\" style={{ fill: \"white\" }} />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    shareScreen && (\r\n                                        <Tooltip title='Stop Sharing'>\r\n                                            <IconButton onClick={() => { stopSharingScreen(); }}>\r\n                                                <StopScreenShare fontSize=\"large\" style={{ fill: \"white\" }} />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    )\r\n                                }\r\n                                <Tooltip title='Copy Meet ID'>\r\n                                    <CopyToClipboard text={me}>\r\n                                        <IconButton>\r\n                                            <Assignment fontSize=\"large\" style={{ fill: \"white\" }} />\r\n                                        </IconButton>\r\n                                    </CopyToClipboard>\r\n                                </Tooltip>\r\n                                <Tooltip title='Raise Hand'>\r\n                                    <IconButton>\r\n                                        <PanTool fontSize=\"large\" style={{ fill: \"white\" }} />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                                <Tooltip title='Show Conversation'>\r\n                                    <IconButton onClick={() => { setChatVisibility(!chatVisibility); }}>\r\n                                        <Chat fontSize=\"large\" style={{ fill: \"white\" }} />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                                <Tooltip title='Show Participants'>\r\n                                    <IconButton>\r\n                                        <People fontSize=\"large\" style={{ fill: \"white\" }} />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                                <Tooltip title='Leave Call'>\r\n                                    <IconButton onClick={leaveCall}>\r\n                                        <PhoneDisabled fontSize=\"large\" style={{ fill: \"red\" }} />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CallSettings;\r\n","import React, { useContext } from 'react';\r\nimport { Button, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    notification: {\r\n        zIndex: '2000',\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    },\r\n    paper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        padding: '10px'\r\n    }\r\n}));\r\n\r\nconst Notifications = () => {\r\n    const { answerCall, call, callAccepted, callJoined } = useContext(SocketContext);\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.notification}>\r\n            {call.isReceivedCall && !callAccepted && (\r\n                <Paper className={classes.paper}>\r\n                    <h1>{call.name} is calling: &nbsp; &nbsp; &nbsp;</h1>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\r\n                        Answer\r\n                    </Button>\r\n                </Paper>\r\n            )}\r\n\r\n            {callJoined && !callAccepted && (\r\n                <Paper className={classes.paper}>\r\n                    <h1>Waiting for host to let you in...</h1>\r\n                </Paper>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useContext, useState } from 'react';\r\nimport { Tooltip, IconButton, Paper, TextField } from '@material-ui/core';\r\nimport { Send } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: '10px',\r\n        height: '85vh',\r\n        width: '20vw',\r\n        border: '1px solid black',\r\n        zIndex: '3000',\r\n        position: 'absolute',\r\n        top: '10vh',\r\n        right: '0',\r\n    },\r\n    messageField: {\r\n        width: '78%'\r\n    },\r\n    chatContainer: {\r\n        height: '78vh',\r\n        overflowY: 'auto'\r\n    },\r\n    message: {\r\n        width: '60%',\r\n        padding: '5px',\r\n        margin: '5px',\r\n        border: '1px solid black',\r\n        borderRadius: '5px'\r\n    },\r\n    left: {\r\n        float: 'left',\r\n        clear: 'both',\r\n        backgroundColor: 'white',\r\n    },\r\n    right: {\r\n        float: 'right',\r\n        clear: 'both',\r\n        backgroundColor: '#6264a7',\r\n        color: 'white'\r\n    },\r\n    middle: {\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        textAlign: 'center',\r\n        clear: 'both',\r\n        backgroundColor: 'lightblue'\r\n    }\r\n}));\r\n\r\nconst Chat = () => {\r\n    const { chatVisibility, messageRef, connectionRef, name } = useContext(SocketContext);\r\n    const classes = useStyles();\r\n    const [message, setMessage] = useState('');\r\n    \r\n    const sendMessage = () => {\r\n        if (message) {\r\n            messageRef.current.push(\r\n                { message: message, position: \"right\" }\r\n            );\r\n\r\n            if (connectionRef.current) {\r\n                connectionRef.current.send(name + \": \" + message);\r\n            }\r\n\r\n            setMessage('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                chatVisibility && (\r\n                    <Paper className={classes.paper}>\r\n                        <div id=\"chat-container\" className={classes.chatContainer}>\r\n                            {/* <div className={[classes.message, classes.middle].join(' ')}>Hi! How are you?</div> */}\r\n                            {messageRef.current.map((msg) => (msg.position === \"middle\") ? <div className={[classes.message, classes.middle].join(' ')}>{msg.message}</div>\r\n                                : (msg.position === \"left\") ? <div className={[classes.message, classes.left].join(' ')}>{msg.message}</div>\r\n                                    : <div className={[classes.message, classes.right].join(' ')}>{msg.message}</div>)}\r\n                        </div>\r\n                        <form action='#' autoComplete=\"off\">\r\n                            <TextField label=\"Type Message\" value={message} name=\"messageInp\" id=\"messageInp\" className={classes.messageField} onChange={(e) => setMessage(e.target.value)} />\r\n                            <Tooltip title='Send Message'>\r\n                                <IconButton type='submit' color='primary' onClick={(e) => { e.preventDefault(); sendMessage(); }}>\r\n                                    <Send fontSize=\"large\" />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </form>\r\n                    </Paper>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n","import React, { useContext } from 'react';\r\nimport { Typography, AppBar, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport CallForm from './components/CallForm';\r\nimport CallSettings from './components/CallSettings';\r\nimport Notifications from './components/Notifications';\r\nimport Chat from './components/Chat';\r\n\r\nimport { SocketContext } from './SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        padding: '10px',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        width: '100%',\r\n        border: '2px solid black',\r\n        background: '#0a0a0a',\r\n\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '90%',\r\n        },\r\n    },\r\n    wrapper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n    },\r\n    video: {\r\n        width: '50vw',\r\n        height: '78vh',\r\n        border: '2px solid black',\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '300px',\r\n        },\r\n    },\r\n    typography: {\r\n        zIndex: '1000',\r\n        position: 'absolute',\r\n        border: '2px solid black',\r\n        background: '#6264a7',\r\n        padding: '5px 5px'\r\n    },\r\n}))\r\n\r\nconst App = () => {\r\n    const classes = useStyles();\r\n    const { name, callAccepted, callStarted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\r\n\r\n    return (\r\n        <div>\r\n            <AppBar className={classes.appBar} position=\"static\">\r\n                <Typography variant=\"h6\" align=\"center\" fontFamily=\"Open Sans\">Microsoft Teams Clone</Typography>\r\n            </AppBar>\r\n            <Grid container xs={12} direction='row' justify='center'>\r\n                <Grid container xs={6}>\r\n                    {\r\n                        stream && (\r\n                            <Grid item xs={12} md={6}>\r\n                                <Typography className={classes.typography} variant='h5' gutterBottom>{name || 'Name'}</Typography>\r\n                                <video playsInline muted ref={myVideo} autoPlay className={classes.video} />\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                </Grid>\r\n                {\r\n                    !callAccepted && !callStarted && (<Grid container xs={6} direction='column' justify='center'>\r\n                        <CallForm />\r\n                    </Grid>)\r\n                }\r\n                {\r\n                    callAccepted && !callEnded && (\r\n                        <Grid item xs={12} md={6}>\r\n                            <Typography className={classes.typography} variant='h5' gutterBottom>{call.name || 'Name'}</Typography>\r\n                            <video playsInline ref={userVideo} autoPlay className={classes.video} />\r\n                        </Grid>\r\n                    )\r\n                }\r\n            </Grid>\r\n            <Chat />\r\n            <CallSettings />\r\n            <Notifications />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport { ContextProvider } from './SocketContext';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n    <ContextProvider>\r\n        <App />\r\n    </ContextProvider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}